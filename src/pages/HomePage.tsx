import React from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { Search, Gift, Star, Zap } from 'lucide-react';
import { Card, SectionHeader, Badge } from '../shared/Ui';
import { ProductCard, ProductCardSkeleton } from '../widgets/ProductCard';
import { useProducts } from '../entities/product';
import { useTelegram } from '../shared/Telegram';

export const HomePage: React.FC = () => {
  const navigate = useNavigate();
  const { user, haptic } = useTelegram();
  const { data: products, isLoading } = useProducts();
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π
  const popularProducts = products?.filter(p => p.isPopular).slice(0, 4) || [];
  const newProducts = products?.filter(p => p.isNew).slice(0, 2) || [];

  const quickActions = [
    {
      title: 'Pod-—Å–∏—Å—Ç–µ–º—ã',
      emoji: 'üîã',
      path: '/catalog?category=pods',
      description: '–ú–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞'
    },
    {
      title: '–û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ',
      emoji: 'üí®', 
      path: '/catalog?category=disposable',
      description: '–ì–æ—Ç–æ–≤—ã–µ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é'
    },
    {
      title: '–ñ–∏–¥–∫–æ—Å—Ç–∏',
      emoji: 'üß™',
      path: '/catalog?category=liquids', 
      description: '–í–∫—É—Å—ã –¥–ª—è –∑–∞–ø—Ä–∞–≤–∫–∏'
    },
    {
      title: '–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ',
      icon: <Star size={24} className="text-yellow-500" />,
      path: '/catalog?filter=popular',
      description: '–•–∏—Ç—ã –ø—Ä–æ–¥–∞–∂'
    }
  ];

  return (
    <div className="space-y-6">
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π */}
      <Card className="text-center bg-gradient-to-r from-blue-50 to-purple-50">
        <div className="mb-4">
          <h1 className="text-2xl font-bold mb-2">
            VapeShop üí®
          </h1>
          {user && (
            <p className="text-tg-hint">
              –ü—Ä–∏–≤–µ—Ç, {user.first_name}! –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞ üëã
            </p>
          )}
        </div>
        
        {/* –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ */}
        <Link 
          to="/catalog" 
          onClick={() => haptic.light()}
          className="block"
        >
          <div className="flex items-center gap-3 p-3 bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow">
            <Search size={20} className="text-tg-hint" />
            <span className="text-tg-hint text-left flex-1">
              –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...
            </span>
            <Zap size={16} className="text-tg-button" />
          </div>
        </Link>
      </Card>

      {/* –ü—Ä–æ–º–æ –±–∞–Ω–Ω–µ—Ä */}
      <Card className="bg-gradient-to-r from-purple-500 to-pink-500 text-white overflow-hidden relative">
        <div className="relative z-10">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="font-bold text-xl mb-1">–°–∫–∏–¥–∫–∞ 20%</h3>
              <p className="text-sm opacity-90 mb-2">–ù–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑</p>
              <Badge variant="warning" >
                –ü—Ä–æ–º–æ–∫–æ–¥: WELCOME20
              </Badge>
            </div>
            <Gift size={48} className="opacity-80" />
          </div>
        </div>
        
        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç */}
        <div className="absolute top-0 right-0 w-32 h-32 bg-white opacity-10 rounded-full -translate-y-16 translate-x-16" />
      </Card>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <div>
        <SectionHeader>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</SectionHeader>
        
        <div className="grid grid-cols-2 gap-3">
          {quickActions.map((action, index) => (
            <Link 
              key={index}
              to={action.path}
              onClick={() => haptic.light()}
            >
              <Card className="text-center hover:shadow-md transition-shadow">
                <div className="mb-3">
                  {action.emoji ? (
                    <div className="text-3xl mb-2">{action.emoji}</div>
                  ) : (
                    <div className="flex justify-center mb-2">{action.icon}</div>
                  )}
                </div>
                
                <div className="font-medium text-tg-text mb-1">
                  {action.title}
                </div>
                
                <div className="text-xs text-tg-hint">
                  {action.description}
                </div>
              </Card>
            </Link>
          ))}
        </div>
      </div>

      {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã */}
      <div>
        <SectionHeader>
          üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
          <Link to="/catalog?filter=popular">
            <button 
              className="text-tg-button text-sm font-medium hover:underline"
              onClick={() => haptic.light()}
            >
              –í—Å–µ ‚Üí
            </button>
          </Link>
        </SectionHeader>
        
        {isLoading ? (
          <div className="grid grid-cols-2 gap-3">
            {[1, 2, 3, 4].map(i => (
              <ProductCardSkeleton key={i} variant="grid" />
            ))}
          </div>
        ) : (
          <div className="grid grid-cols-2 gap-3">
            {popularProducts.map(product => (
              <ProductCard
                key={product.id}
                product={product}
                onClick={() => {
                  haptic.light();
                  navigate(`/product/${product.id}`);
                }}
                variant="grid"
              />
            ))}
          </div>
        )}
      </div>

      {/* –ù–æ–≤–∏–Ω–∫–∏ */}
      {newProducts.length > 0 && (
        <div>
          <SectionHeader>
            ‚ú® –ù–æ–≤–∏–Ω–∫–∏
            <Link to="/catalog?filter=new">
              <button 
                className="text-tg-button text-sm font-medium hover:underline"
                onClick={() => haptic.light()}
              >
                –í—Å–µ ‚Üí
              </button>
            </Link>
          </SectionHeader>
          
          <div className="space-y-3">
            {newProducts.map(product => (
              <ProductCard
                key={product.id}
                product={product}
                onClick={() => {
                  haptic.light();
                  navigate(`/product/${product.id}`);
                }}
                variant="list"
              />
            ))}
          </div>
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
      <Card className="bg-orange-50 border-l-4 border-orange-500">
        <div className="flex gap-3">
          <div className="text-orange-500 text-xl">‚ö†Ô∏è</div>
          <div className="text-sm">
            <div className="font-medium text-orange-800 mb-1">
              –í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è 18+
            </div>
            <div className="text-orange-700">
              –ü—Ä–æ–¥–∞–∂–∞ —Ç–∞–±–∞—á–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –ª–∏—Ü–∞–º –º–ª–∞–¥—à–µ 18 –ª–µ—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–∞ –∑–∞–∫–æ–Ω–æ–º –†–§
            </div>
          </div>
        </div>
      </Card>

      {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ */}
      <Card className="text-center">
        <div className="space-y-3">
          <h3 className="font-semibold">–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</h3>
          
          <div className="flex justify-center gap-4">
            <button 
              onClick={() => {
                haptic.light();
                window.Telegram?.WebApp?.openTelegramLink('https://t.me/vapeshop_support');
              }}
              className="flex items-center gap-2 px-4 py-2 bg-tg-button text-tg-button-text rounded-lg hover:opacity-90 transition-opacity"
            >
              üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞
            </button>
            
            <button
              onClick={() => {
                haptic.light();
                window.Telegram?.WebApp?.openTelegramLink('https://t.me/vapeshop_channel');
              }}
              className="flex items-center gap-2 px-4 py-2 bg-tg-secondary-bg text-tg-text rounded-lg hover:bg-gray-200 transition-colors"
            >
              üì¢ –ö–∞–Ω–∞–ª
            </button>
          </div>
          
          <div className="text-xs text-tg-hint">
            –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: 09:00 ‚Äî 22:00
          </div>
        </div>
      </Card>
    </div>
  );
};