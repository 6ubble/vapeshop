import { create } from 'zustand';
import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';

// –ü—Ä–æ—Å—Ç–æ–π —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞
export interface Product {
  id: string;
  name: string;
  price: number;
  originalPrice?: number;
  image: string;
  brand: string;
  category: string;
  inStock: boolean;
  rating: number;
  description: string;
}

// API –∫–ª–∏–µ–Ω—Ç –ø—Ä—è–º–æ –∑–¥–µ—Å—å
const API_URL = import.meta.env.VITE_API_URL || 'https://api.yourshop.com';

const productsAPI = {
  getAll: async (): Promise<Product[]> => {
    const response = await fetch(`${API_URL}/products`, {
      headers: {
        'Authorization': `Bearer ${window.Telegram?.WebApp?.initData}`
      }
    });
    return response.json();
  },
  
  getById: async (id: string): Promise<Product> => {
    const response = await fetch(`${API_URL}/products/${id}`, {
      headers: {
        'Authorization': `Bearer ${window.Telegram?.WebApp?.initData}`
      }
    });
    return response.json();
  },
  
  search: async (query: string): Promise<Product[]> => {
    const response = await fetch(`${API_URL}/products/search?q=${encodeURIComponent(query)}`, {
      headers: {
        'Authorization': `Bearer ${window.Telegram?.WebApp?.initData}`
      }
    });
    return response.json();
  }
};

// React Query —Ö—É–∫–∏ - –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—ç–∫–µ–Ω–¥–∞
export const useProducts = () => 
  useQuery({
    queryKey: ['products'],
    queryFn: productsAPI.getAll,
    staleTime: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç –∫–µ—à
    gcTime: 30 * 60 * 1000,    // 30 –º–∏–Ω—É—Ç –≤ –ø–∞–º—è—Ç–∏
  });

export const useProduct = (id: string) =>
  useQuery({
    queryKey: ['product', id],
    queryFn: () => productsAPI.getById(id),
    enabled: !!id,
    staleTime: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç –∫–µ—à
  });

export const useProductSearch = (query: string) =>
  useQuery({
    queryKey: ['products', 'search', query],
    queryFn: () => productsAPI.search(query),
    enabled: query.length > 2,
    staleTime: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç –∫–µ—à –¥–ª—è –ø–æ–∏—Å–∫–∞
  });

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
export const CATEGORIES = [
  { id: 'all', name: '–í—Å–µ', emoji: 'üõçÔ∏è' },
  { id: 'pods', name: 'Pod-—Å–∏—Å—Ç–µ–º—ã', emoji: 'üîã' },
  { id: 'disposable', name: '–û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ', emoji: 'üí®' },
  { id: 'liquids', name: '–ñ–∏–¥–∫–æ—Å—Ç–∏', emoji: 'üß™' }
];